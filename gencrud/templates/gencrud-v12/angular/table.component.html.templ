<mat-card id="${ obj.name }">
    <mat-card-content>
        <div class="navigator-row form">
            <mat-form-field floatPlaceholder="never" color="accent">
                <input matInput #filter placeholder="Filter ${ obj.title }" [value]="dataSource.filter" id="${ obj.name }.filter">
            </mat-form-field>
            <span class="spacer-search"></span>
            <span>
% for action in obj.actions.getHeaderButtons():
                ${ action.buttonObject() }
% endfor
            </span>
            <span id="${ obj.name }.header.paginator">
                <mat-paginator #top_paginator [length]="dataSource.filteredData.length" (page)="pagingEvent( $event )"
                       [pageIndex]="pageIndex" [pageSize]="pageSize" [pageSizeOptions]="[5, 10, 25, 100]">
                </mat-paginator>
            </span>
            <span>
                <app-help-component helpinfo="${ obj.name }_table" fallback="table_view"></app-help-component>
            </span>
% if obj.hasAutoUpdate():
            <span>
                <button mat-icon-button color="primary" (click)="toggleAutoUpdate()" id="${ obj.name }.header.autoupdate">
                    <mat-icon *ngIf="toggleUpdate == false; else isAutoRefresh" aria-label="Autoupdate">update</mat-icon>
                    <ng-template #isAutoRefresh>
                        <mat-icon *ngIf="toggleUpdate" aria-label="Stop autoupdate">link_off</mat-icon>
                    </ng-template>
                </button>
            </span>
% endif
            <span>
                <button mat-icon-button color="primary" (click)="refresh()" id="${ obj.name }.header.refresh">
                    <mat-icon aria-label="Refresh the view">refresh</mat-icon>
                </button>
            </span>
        </div>
        <mat-table id="${ obj.name }.table" #table${ obj.cls } [dataSource]="dataSource" matSort class="mat-cell" ${obj.table.sortedInfo()}>
% for field in obj.table.listViewColumns:
            <!-- ${ field.name } Column -->
            <ng-container matColumnDef="${ field.name }" class="column_${ field.name }">
                <mat-header-cell *matHeaderCellDef mat-sort-header>
                    ${ field.label }
                </mat-header-cell>
                <mat-cell *matCellDef="let row; let i=index;" id="${ obj.cls }.${ field.name }" matTooltip="ID: {{ row.${field.name} }}"
                          ${ obj.actions.getRowRouterLink() }>
                    <span class="truncate-text">
% if field.ui is not None:
%  if field.ui.hasService():
%   if field.hasAttribute( "NULL" ):
%    if ',' in field.ui.service.label:
                        ${ " - ".join( [ "{{{{ row.{0}_FK.{1} }}}}".format( field.name, elem ) for elem in field.ui.service.label.split(',') ] ) }
%    else:
                        <span *ngIf="row.${ field.name }_FK; else no_${ field.name }_FK">
                            {{ row.${ field.name }_FK.${ field.ui.service.label } }}
                        </span>
                        <ng-template #no_${ field.name }_FK> not avaiable </ng-template>
%    endif
%   else:
%    if ',' in field.ui.service.label:
                        ${ " - ".join( [ "{{{{ row.{0}_FK.{1} }}}}".format( field.name, elem ) for elem in field.ui.service.label.split(',') ] ) }
%    else:
                        <span *ngIf="row.${ field.name }_FK; else no_${ field.name }_FK">
                            {{ row.${ field.name }_FK.${ field.ui.service.label } }}
                        </span>
                        <ng-template #no_${ field.name }_FK> not avaiable </ng-template>
%    endif
%   endif

%  elif field.hasResolveList():
                        {{ row.${ field.name }_LABEL }}
%  elif field.ui.isDateTime() and field.ui.isDate() and field.ui.isTime() and field.ui.format != 'text':
                        {{ row.${ field.name } | date: "${ field.ui.format }" }}
%  elif field.ui.isDateTime():
                        {{ row.${ field.name } | date: "yyyy-MM-dd HH:mm:ss" }}
%  elif field.ui.isDate():
                        {{ row.${ field.name } | date: "yyyy-MM-dd" }}
%  elif field.ui.isTime():
                        {{ row.${ field.name } | date: "HH:mm:ss" }}
%  elif field.ui.pipe != '':
                        {{ dataSource.reFormat( row.${ field.name }, '${ field.ui.pipe }', '${ field.ui.format }' ) }}
%  else:
                        {{ row.${ field.name } }}
%  endif
% endif
                    </span>
                </mat-cell>
            </ng-container>
% endfor
            <!-- actions -->
            <ng-container matColumnDef="actions">
                <!-- Header buttons -->
                <mat-header-cell *matHeaderCellDef>
                    Options
                </mat-header-cell>
                <!-- Row buttons -->
                <mat-cell *matCellDef="let row; let i=index;" >
% for action in obj.actions.getCellButtons():
                    ${ action.buttonObject() }
% endfor
                </mat-cell>
            </ng-container>
            <mat-header-row *matHeaderRowDef="displayedColumns">
            </mat-header-row>
            <mat-row *matRowDef="let row; columns: displayedColumns;">
            </mat-row>
        </mat-table>
        <div class="http-spinner" *ngIf="spinnerService.visibility | async as visibility; else loading_done">
            <div class="http-spinner-inner">
                <mat-spinner [diameter]="50"></mat-spinner>
            </div>
        </div>
        <ng-template #loading_done>
            <div class="no-results" id="no-results" [style.display]="dataSource.renderedData.length == 0 ? '' : 'none'">
                No results
            </div>
        </ng-template>
        <div class="navigator-row">
            <span>
% for action in obj.actions.getFooterButtons():
                ${ action.buttonObject() }
% endfor
            </span>
            <span class="spacer"></span>
            <span id="${ obj.name }.botton.paginator">
                <mat-paginator #bot_paginator [length]="dataSource.filteredData.length" (page)="pagingEvent( $event )"
                               [pageIndex]="pageIndex" [pageSize]="pageSize" [pageSizeOptions]="[5, 10, 25, 100]">
                </mat-paginator>
            </span>
            <span>
                <button mat-icon-button color="primary" (click)="refresh()" id="${ obj.name }.botton.refresh">
                    <mat-icon aria-label="Refresh the view">refresh</mat-icon>
                </button>
            </span>
        </div>
    </mat-card-content>
</mat-card>
